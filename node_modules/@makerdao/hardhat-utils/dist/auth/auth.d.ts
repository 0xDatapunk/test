import { AuthableLike } from './AuthableContract';
/**
 * Gets all active wards of a given contract. Turns out that it's not so trivial since events might be quite misleading.
 * This implementation simply gets all wards even relied and filter the ones that are not active anymore.
 */
export declare function getActiveWards(_authContract: AuthableLike, fromBlockOrBlockhash?: string | number): Promise<string[]>;
/**
 * Tests given contract against standard auth test suite
 * @param strictErrorMsgs - does contract revert error messages with its name?
 */
export declare function testAuth({ name, getDeployArgs, authedMethods, strictErrorMsgs, }: {
    name: string;
    getDeployArgs: () => Promise<any[]>;
    authedMethods: Array<(contract: any) => Promise<any>>;
    strictErrorMsgs?: boolean;
}): void;
